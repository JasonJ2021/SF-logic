DIGEST 730a4f6acc8e41d77d140dedcd074970
FLF.Tactics
R698:701 LF.Poly <> <> lib
prf 977:982 <> silly1
R1000:1002 Coq.Init.Datatypes <> nat ind
binder 994:994 <> n:1
binder 996:996 <> m:2
R1013:1018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1009:1011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1008:1008 LF.Tactics <> n:1 var
R1012:1012 LF.Tactics <> m:2 var
R1020:1022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1019:1019 LF.Tactics <> n:1 var
R1023:1023 LF.Tactics <> m:2 var
prf 1508:1513 <> silly2
R1535:1537 Coq.Init.Datatypes <> nat ind
binder 1525:1525 <> n:3
binder 1527:1527 <> m:4
binder 1529:1529 <> o:5
binder 1531:1531 <> p:6
R1548:1553 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1544:1546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1543:1543 LF.Tactics <> n:3 var
R1547:1547 LF.Tactics <> m:4 var
R1554:1554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1577:1583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1560:1563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1556:1558 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1555:1555 LF.Tactics <> n:3 var
R1559:1559 LF.Tactics <> m:4 var
R1569:1571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1564:1564 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1566:1566 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1568:1568 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1565:1565 LF.Tactics <> n:3 var
R1567:1567 LF.Tactics <> o:5 var
R1572:1572 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1574:1574 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1576:1576 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1573:1573 LF.Tactics <> m:4 var
R1575:1575 LF.Tactics <> p:6 var
R1589:1591 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1584:1584 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1586:1586 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1588:1588 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1585:1585 LF.Tactics <> n:3 var
R1587:1587 LF.Tactics <> o:5 var
R1592:1592 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1594:1594 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1596:1596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1593:1593 LF.Tactics <> m:4 var
R1595:1595 LF.Tactics <> p:6 var
prf 2126:2132 <> silly2a
R2150:2152 Coq.Init.Datatypes <> nat ind
binder 2144:2144 <> n:7
binder 2146:2146 <> m:8
R2171:2177 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2163:2165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2158:2158 LF.Poly <> :::'('_x_','_x_')' not
R2160:2160 LF.Poly <> :::'('_x_','_x_')' not
R2162:2162 LF.Poly <> :::'('_x_','_x_')' not
R2159:2159 LF.Tactics <> n:7 var
R2161:2161 LF.Tactics <> n:7 var
R2166:2166 LF.Poly <> :::'('_x_','_x_')' not
R2168:2168 LF.Poly <> :::'('_x_','_x_')' not
R2170:2170 LF.Poly <> :::'('_x_','_x_')' not
R2167:2167 LF.Tactics <> m:8 var
R2169:2169 LF.Tactics <> m:8 var
R2178:2178 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2225:2231 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2193:2195 Coq.Init.Datatypes <> nat ind
binder 2187:2187 <> q:9
binder 2189:2189 <> r:10
R2212:2215 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2204:2206 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2199:2199 LF.Poly <> :::'('_x_','_x_')' not
R2201:2201 LF.Poly <> :::'('_x_','_x_')' not
R2203:2203 LF.Poly <> :::'('_x_','_x_')' not
R2200:2200 LF.Tactics <> q:9 var
R2202:2202 LF.Tactics <> q:9 var
R2207:2207 LF.Poly <> :::'('_x_','_x_')' not
R2209:2209 LF.Poly <> :::'('_x_','_x_')' not
R2211:2211 LF.Poly <> :::'('_x_','_x_')' not
R2208:2208 LF.Tactics <> r:10 var
R2210:2210 LF.Tactics <> r:10 var
R2219:2221 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2216:2216 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2218:2218 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2217:2217 LF.Tactics <> q:9 var
R2222:2222 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2224:2224 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2223:2223 LF.Tactics <> r:10 var
R2235:2237 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2232:2232 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2234:2234 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2233:2233 LF.Tactics <> n:7 var
R2238:2238 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2240:2240 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2239:2239 LF.Tactics <> m:8 var
prf 2439:2446 <> silly_ex
binder 2457:2457 <> p:11
R2462:2462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2508:2514 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2470:2470 <> n:12
R2486:2489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2479:2481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2473:2476 LF.Basics <> even def
R2478:2478 LF.Tactics <> n:12 var
R2482:2485 LF.Basics <> true constr
R2500:2502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2490:2493 LF.Basics <> even def
R2496:2496 Coq.Init.Datatypes <> S constr
R2498:2498 LF.Tactics <> n:12 var
R2503:2507 LF.Basics <> false constr
R2515:2515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2556:2562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2523:2523 <> n:13
R2540:2543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2532:2534 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2526:2529 LF.Basics <> even def
R2531:2531 LF.Tactics <> n:13 var
R2535:2539 LF.Basics <> false constr
R2549:2551 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2544:2546 LF.Basics <> odd def
R2548:2548 LF.Tactics <> n:13 var
R2552:2555 LF.Basics <> true constr
R2576:2581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2569:2571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2563:2566 LF.Basics <> even def
R2568:2568 LF.Tactics <> p:11 var
R2572:2575 LF.Basics <> true constr
R2591:2593 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2582:2584 LF.Basics <> odd def
R2587:2587 Coq.Init.Datatypes <> S constr
R2589:2589 LF.Tactics <> p:11 var
R2594:2597 LF.Basics <> true constr
prf 2932:2937 <> silly3
R2955:2957 Coq.Init.Datatypes <> nat ind
binder 2949:2949 <> n:14
binder 2951:2951 <> m:15
R2968:2973 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2964:2966 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2963:2963 LF.Tactics <> n:14 var
R2967:2967 LF.Tactics <> m:15 var
R2975:2977 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2974:2974 LF.Tactics <> m:15 var
R2978:2978 LF.Tactics <> n:14 var
R3583:3585 LF.Poly <> rev def
prf 3596:3608 <> rev_exercise1
R3627:3630 LF.Poly <> list ind
R3632:3634 Coq.Init.Datatypes <> nat ind
binder 3620:3620 <> l:16
binder 3622:3623 <> l':17
R3650:3655 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3641:3643 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3640:3640 LF.Tactics <> l:16 var
R3644:3646 LF.Poly <> rev def
R3648:3649 LF.Tactics <> l':17 var
R3658:3660 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3656:3657 LF.Tactics <> l':17 var
R3661:3663 LF.Poly <> rev def
R3665:3665 LF.Tactics <> l:16 var
R3726:3739 LF.Poly <> rev_involutive thm
R3726:3739 LF.Poly <> rev_involutive thm
def 4213:4228 <> trans_eq_example
R4254:4256 Coq.Init.Datatypes <> nat ind
binder 4240:4240 <> a:18
binder 4242:4242 <> b:19
binder 4244:4244 <> c:20
binder 4246:4246 <> d:21
binder 4248:4248 <> e:22
binder 4250:4250 <> f:23
R4278:4286 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4270:4272 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4265:4265 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4267:4267 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4269:4269 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4266:4266 LF.Tactics <> a:18 var
R4268:4268 LF.Tactics <> b:19 var
R4273:4273 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4275:4275 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4277:4277 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4274:4274 LF.Tactics <> c:20 var
R4276:4276 LF.Tactics <> d:21 var
R4300:4308 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4292:4294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4287:4287 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4289:4289 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4291:4291 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4288:4288 LF.Tactics <> c:20 var
R4290:4290 LF.Tactics <> d:21 var
R4295:4295 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4297:4297 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4299:4299 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4296:4296 LF.Tactics <> e:22 var
R4298:4298 LF.Tactics <> f:23 var
R4314:4316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4309:4309 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4311:4311 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4313:4313 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4310:4310 LF.Tactics <> a:18 var
R4312:4312 LF.Tactics <> b:19 var
R4317:4317 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4319:4319 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4321:4321 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4318:4318 LF.Tactics <> e:22 var
R4320:4320 LF.Tactics <> f:23 var
prf 4581:4588 <> trans_eq
binder 4600:4600 <> X:24
R4617:4617 LF.Tactics <> X:24 var
binder 4609:4609 <> n:25
binder 4611:4611 <> m:26
binder 4613:4613 <> o:27
R4628:4631 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4624:4626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4623:4623 LF.Tactics <> n:25 var
R4627:4627 LF.Tactics <> m:26 var
R4637:4640 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4633:4635 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4632:4632 LF.Tactics <> m:26 var
R4636:4636 LF.Tactics <> o:27 var
R4642:4644 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4641:4641 LF.Tactics <> n:25 var
R4645:4645 LF.Tactics <> o:27 var
def 4900:4916 <> trans_eq_example'
R4942:4944 Coq.Init.Datatypes <> nat ind
binder 4928:4928 <> a:28
binder 4930:4930 <> b:29
binder 4932:4932 <> c:30
binder 4934:4934 <> d:31
binder 4936:4936 <> e:32
binder 4938:4938 <> f:33
R4966:4974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4958:4960 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4953:4953 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4955:4955 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4957:4957 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4954:4954 LF.Tactics <> a:28 var
R4956:4956 LF.Tactics <> b:29 var
R4961:4961 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4963:4963 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4965:4965 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4962:4962 LF.Tactics <> c:30 var
R4964:4964 LF.Tactics <> d:31 var
R4988:4996 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4980:4982 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4975:4975 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4977:4977 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4979:4979 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4976:4976 LF.Tactics <> c:30 var
R4978:4978 LF.Tactics <> d:31 var
R4983:4983 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4985:4985 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4987:4987 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4984:4984 LF.Tactics <> e:32 var
R4986:4986 LF.Tactics <> f:33 var
R5002:5004 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4997:4997 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4999:4999 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5001:5001 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4998:4998 LF.Tactics <> a:28 var
R5000:5000 LF.Tactics <> b:29 var
R5005:5005 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5007:5007 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5009:5009 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5006:5006 LF.Tactics <> e:32 var
R5008:5008 LF.Tactics <> f:33 var
R5482:5482 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5484:5484 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5486:5486 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5464:5471 LF.Tactics <> trans_eq thm
R5482:5482 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5484:5484 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5486:5486 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5464:5471 LF.Tactics <> trans_eq thm
def 5966:5983 <> trans_eq_example''
R6009:6011 Coq.Init.Datatypes <> nat ind
binder 5995:5995 <> a:34
binder 5997:5997 <> b:35
binder 5999:5999 <> c:36
binder 6001:6001 <> d:37
binder 6003:6003 <> e:38
binder 6005:6005 <> f:39
R6033:6041 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6025:6027 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6020:6020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6022:6022 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6024:6024 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6021:6021 LF.Tactics <> a:34 var
R6023:6023 LF.Tactics <> b:35 var
R6028:6028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6030:6030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6032:6032 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6029:6029 LF.Tactics <> c:36 var
R6031:6031 LF.Tactics <> d:37 var
R6055:6063 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6047:6049 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6042:6042 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6044:6044 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6046:6046 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6043:6043 LF.Tactics <> c:36 var
R6045:6045 LF.Tactics <> d:37 var
R6050:6050 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6052:6052 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6054:6054 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6051:6051 LF.Tactics <> e:38 var
R6053:6053 LF.Tactics <> f:39 var
R6069:6071 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6064:6064 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6066:6066 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6068:6068 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6065:6065 LF.Tactics <> a:34 var
R6067:6067 LF.Tactics <> b:35 var
R6072:6072 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6074:6074 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6076:6076 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6073:6073 LF.Tactics <> e:38 var
R6075:6075 LF.Tactics <> f:39 var
R6131:6131 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6133:6133 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6135:6135 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6131:6131 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6133:6133 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6135:6135 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6248:6264 <> trans_eq_exercise
R6286:6288 Coq.Init.Datatypes <> nat ind
binder 6276:6276 <> n:40
binder 6278:6278 <> m:41
binder 6280:6280 <> o:42
binder 6282:6282 <> p:43
R6313:6321 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6298:6301 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6312:6312 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6297:6297 LF.Tactics <> m:41 var
R6302:6309 LF.Basics <> minustwo def
R6311:6311 LF.Tactics <> o:42 var
R6333:6341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6322:6322 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6328:6331 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6324:6326 LF.Basics <> ::nat_scope:x_'+'_x not
R6323:6323 LF.Tactics <> n:40 var
R6327:6327 LF.Tactics <> p:43 var
R6332:6332 LF.Tactics <> m:41 var
R6342:6342 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6348:6352 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6363:6363 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6344:6346 LF.Basics <> ::nat_scope:x_'+'_x not
R6343:6343 LF.Tactics <> n:40 var
R6347:6347 LF.Tactics <> p:43 var
R6353:6360 LF.Basics <> minustwo def
R6362:6362 LF.Tactics <> o:42 var
prf 7768:7778 <> S_injective
R7796:7798 Coq.Init.Datatypes <> nat ind
binder 7790:7790 <> n:44
binder 7792:7792 <> m:45
R7813:7818 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7807:7809 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7804:7804 Coq.Init.Datatypes <> S constr
R7806:7806 LF.Tactics <> n:44 var
R7810:7810 Coq.Init.Datatypes <> S constr
R7812:7812 LF.Tactics <> m:45 var
R7820:7822 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7819:7819 LF.Tactics <> n:44 var
R7823:7823 LF.Tactics <> m:45 var
R7865:7867 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7868:7871 Coq.Init.Peano <> pred abbrev
R7874:7874 Coq.Init.Datatypes <> S constr
R7865:7867 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7868:7871 Coq.Init.Peano <> pred abbrev
R7874:7874 Coq.Init.Datatypes <> S constr
prf 8363:8374 <> S_injective'
R8392:8394 Coq.Init.Datatypes <> nat ind
binder 8386:8386 <> n:46
binder 8388:8388 <> m:47
R8409:8414 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8403:8405 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8400:8400 Coq.Init.Datatypes <> S constr
R8402:8402 LF.Tactics <> n:46 var
R8406:8406 Coq.Init.Datatypes <> S constr
R8408:8408 LF.Tactics <> m:47 var
R8416:8418 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8415:8415 LF.Tactics <> n:46 var
R8419:8419 LF.Tactics <> m:47 var
prf 8930:8942 <> injection_ex1
R8962:8964 Coq.Init.Datatypes <> nat ind
binder 8954:8954 <> n:48
binder 8956:8956 <> m:49
binder 8958:8958 <> o:50
R8983:8988 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8975:8977 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8970:8970 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8972:8972 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8974:8974 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8971:8971 LF.Tactics <> n:48 var
R8973:8973 LF.Tactics <> m:49 var
R8978:8978 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8980:8980 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8982:8982 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8979:8979 LF.Tactics <> o:50 var
R8981:8981 LF.Tactics <> o:50 var
R8990:8992 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8989:8989 LF.Tactics <> n:48 var
R8993:8993 LF.Tactics <> m:49 var
def 9178:9190 <> injection_ex3
binder 9202:9202 <> X:51
R9221:9221 LF.Tactics <> X:51 var
binder 9213:9213 <> x:52
binder 9215:9215 <> y:53
binder 9217:9217 <> z:54
R9231:9234 LF.Poly <> list ind
R9236:9236 LF.Tactics <> X:51 var
binder 9225:9225 <> l:55
binder 9227:9227 <> j:56
R9262:9267 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9253:9255 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9243:9246 LF.Poly <> :::x_'::'_x not
R9242:9242 LF.Tactics <> x:52 var
R9248:9251 LF.Poly <> :::x_'::'_x not
R9247:9247 LF.Tactics <> y:53 var
R9252:9252 LF.Tactics <> l:55 var
R9257:9260 LF.Poly <> :::x_'::'_x not
R9256:9256 LF.Tactics <> z:54 var
R9261:9261 LF.Tactics <> j:56 var
R9278:9283 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9269:9271 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9268:9268 LF.Tactics <> j:56 var
R9273:9276 LF.Poly <> :::x_'::'_x not
R9272:9272 LF.Tactics <> z:54 var
R9277:9277 LF.Tactics <> l:55 var
R9285:9287 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9284:9284 LF.Tactics <> x:52 var
R9288:9288 LF.Tactics <> y:53 var
prf 10127:10142 <> discriminate_ex1
R10160:10162 Coq.Init.Datatypes <> nat ind
binder 10154:10154 <> n:57
binder 10156:10156 <> m:58
R10180:10185 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10173:10175 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10168:10172 LF.Basics <> false constr
R10176:10179 LF.Basics <> true constr
R10187:10189 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10186:10186 LF.Tactics <> n:57 var
R10190:10190 LF.Tactics <> m:58 var
prf 10256:10271 <> discriminate_ex2
R10287:10289 Coq.Init.Datatypes <> nat ind
binder 10283:10283 <> n:59
R10302:10307 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10298:10300 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10295:10295 Coq.Init.Datatypes <> S constr
R10297:10297 LF.Tactics <> n:59 var
R10301:10301 Coq.Init.Datatypes <> O constr
R10313:10315 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10309:10311 LF.Basics <> ::nat_scope:x_'+'_x not
def 11140:11155 <> discriminate_ex3
binder 11169:11169 <> X:60
R11188:11188 LF.Tactics <> X:60 var
binder 11180:11180 <> x:61
binder 11182:11182 <> y:62
binder 11184:11184 <> z:63
R11198:11201 LF.Poly <> list ind
R11203:11203 LF.Tactics <> X:60 var
binder 11192:11192 <> l:64
binder 11194:11194 <> j:65
R11227:11234 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11222:11224 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11212:11215 LF.Poly <> :::x_'::'_x not
R11211:11211 LF.Tactics <> x:61 var
R11217:11220 LF.Poly <> :::x_'::'_x not
R11216:11216 LF.Tactics <> y:62 var
R11221:11221 LF.Tactics <> l:64 var
R11225:11226 LF.Poly <> :::'['_']' not
R11236:11238 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11235:11235 LF.Tactics <> x:61 var
R11239:11239 LF.Tactics <> z:63 var
prf 11506:11512 <> eqb_0_l
binder 11523:11523 <> n:66
R11542:11545 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11535:11537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11530:11533 LF.Basics <> ::nat_scope:x_'=?'_x not
R11534:11534 LF.Tactics <> n:66 var
R11538:11541 LF.Basics <> true constr
R11547:11549 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11546:11546 LF.Tactics <> n:66 var
prf 12448:12454 <> f_equal
binder 12466:12466 <> A:67
binder 12468:12468 <> B:68
R12483:12486 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12482:12482 LF.Tactics <> A:67 var
R12487:12487 LF.Tactics <> B:68 var
binder 12479:12479 <> f:69
R12496:12496 LF.Tactics <> A:67 var
binder 12491:12491 <> x:70
binder 12493:12493 <> y:71
R12507:12510 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12503:12505 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12502:12502 LF.Tactics <> x:70 var
R12506:12506 LF.Tactics <> y:71 var
R12514:12516 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12511:12511 LF.Tactics <> f:69 var
R12513:12513 LF.Tactics <> x:70 var
R12517:12517 LF.Tactics <> f:69 var
R12519:12519 LF.Tactics <> y:71 var
prf 12591:12611 <> eq_implies_succ_equal
R12629:12631 Coq.Init.Datatypes <> nat ind
binder 12623:12623 <> n:72
binder 12625:12625 <> m:73
R12642:12645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12638:12640 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12637:12637 LF.Tactics <> n:72 var
R12641:12641 LF.Tactics <> m:73 var
R12649:12651 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12646:12646 Coq.Init.Datatypes <> S constr
R12648:12648 LF.Tactics <> n:72 var
R12652:12652 Coq.Init.Datatypes <> S constr
R12654:12654 LF.Tactics <> m:73 var
R12684:12690 LF.Tactics <> f_equal thm
R12684:12690 LF.Tactics <> f_equal thm
prf 13124:13145 <> eq_implies_succ_equal'
R13163:13165 Coq.Init.Datatypes <> nat ind
binder 13157:13157 <> n:74
binder 13159:13159 <> m:75
R13176:13179 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13172:13174 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13171:13171 LF.Tactics <> n:74 var
R13175:13175 LF.Tactics <> m:75 var
R13183:13185 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13180:13180 Coq.Init.Datatypes <> S constr
R13182:13182 LF.Tactics <> n:74 var
R13186:13186 Coq.Init.Datatypes <> S constr
R13188:13188 LF.Tactics <> m:75 var
prf 13671:13675 <> S_inj
R13693:13695 Coq.Init.Datatypes <> nat ind
binder 13687:13687 <> n:76
binder 13689:13689 <> m:77
R13703:13706 LF.Basics <> bool ind
binder 13699:13699 <> b:78
R13732:13738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13712:13712 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13727:13730 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13713:13713 LF.Basics <> ::nat_scope:x_'=?'_x not
R13717:13722 LF.Basics <> ::nat_scope:x_'=?'_x not
R13726:13726 LF.Basics <> ::nat_scope:x_'=?'_x not
R13714:13714 Coq.Init.Datatypes <> S constr
R13716:13716 LF.Tactics <> n:76 var
R13723:13723 Coq.Init.Datatypes <> S constr
R13725:13725 LF.Tactics <> m:77 var
R13731:13731 LF.Tactics <> b:78 var
R13739:13739 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13746:13749 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13741:13744 LF.Basics <> ::nat_scope:x_'=?'_x not
R13740:13740 LF.Tactics <> n:76 var
R13745:13745 LF.Tactics <> m:77 var
R13750:13750 LF.Tactics <> b:78 var
prf 14581:14586 <> silly4
R14608:14610 Coq.Init.Datatypes <> nat ind
binder 14598:14598 <> n:79
binder 14600:14600 <> m:80
binder 14602:14602 <> p:81
binder 14604:14604 <> q:82
R14616:14616 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14631:14637 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14622:14625 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14618:14620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14617:14617 LF.Tactics <> n:79 var
R14621:14621 LF.Tactics <> m:80 var
R14627:14629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14626:14626 LF.Tactics <> p:81 var
R14630:14630 LF.Tactics <> q:82 var
R14643:14648 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14639:14641 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14638:14638 LF.Tactics <> m:80 var
R14642:14642 LF.Tactics <> n:79 var
R14650:14652 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14649:14649 LF.Tactics <> q:82 var
R14653:14653 LF.Tactics <> p:81 var
prf 16276:16298 <> double_injective_FAILED
binder 16309:16309 <> n:83
binder 16311:16311 <> m:84
R16335:16340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16324:16326 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16316:16321 LF.Induction <> double def
R16323:16323 LF.Tactics <> n:83 var
R16327:16332 LF.Induction <> double def
R16334:16334 LF.Tactics <> m:84 var
R16342:16344 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16341:16341 LF.Tactics <> n:83 var
R16345:16345 LF.Tactics <> m:84 var
R16648:16654 LF.Tactics <> f_equal thm
R16648:16654 LF.Tactics <> f_equal thm
prf 18971:18986 <> double_injective
binder 18997:18997 <> n:85
binder 18999:18999 <> m:86
R19023:19028 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19012:19014 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19004:19009 LF.Induction <> double def
R19011:19011 LF.Tactics <> n:85 var
R19015:19020 LF.Induction <> double def
R19022:19022 LF.Tactics <> m:86 var
R19030:19032 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19029:19029 LF.Tactics <> n:85 var
R19033:19033 LF.Tactics <> m:86 var
R19917:19923 LF.Tactics <> f_equal thm
R19917:19923 LF.Tactics <> f_equal thm
R20903:20906 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 20970:20977 <> eqb_true
binder 20988:20988 <> n:87
binder 20990:20990 <> m:88
R21008:21011 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21001:21003 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20996:20999 LF.Basics <> ::nat_scope:x_'=?'_x not
R20995:20995 LF.Tactics <> n:87 var
R21000:21000 LF.Tactics <> m:88 var
R21004:21007 LF.Basics <> true constr
R21013:21015 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21012:21012 LF.Tactics <> n:87 var
R21016:21016 LF.Tactics <> m:88 var
def 21643:21673 <> manual_grade_for_informal_proof
R21677:21682 Coq.Init.Datatypes <> option ind
R21688:21688 LF.Poly <> ::type_scope:x_'*'_x not
R21685:21687 Coq.Init.Datatypes <> nat ind
R21689:21694 Coq.Strings.String <> string ind
R21700:21703 Coq.Init.Datatypes <> None constr
prf 21941:21958 <> plus_n_n_injective
binder 21969:21969 <> n:89
binder 21971:21971 <> m:90
R21989:21994 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21981:21983 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21977:21979 LF.Basics <> ::nat_scope:x_'+'_x not
R21976:21976 LF.Tactics <> n:89 var
R21980:21980 LF.Tactics <> n:89 var
R21985:21987 LF.Basics <> ::nat_scope:x_'+'_x not
R21984:21984 LF.Tactics <> m:90 var
R21988:21988 LF.Tactics <> m:90 var
R21996:21998 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21995:21995 LF.Tactics <> n:89 var
R21999:21999 LF.Tactics <> m:90 var
R22241:22249 LF.Induction <> plus_n_Sm thm
R22241:22249 LF.Induction <> plus_n_Sm thm
R22241:22249 LF.Induction <> plus_n_Sm thm
R22271:22279 LF.Induction <> plus_n_Sm thm
R22271:22279 LF.Induction <> plus_n_Sm thm
R22271:22279 LF.Induction <> plus_n_Sm thm
prf 22677:22705 <> double_injective_take2_FAILED
binder 22716:22716 <> n:91
binder 22718:22718 <> m:92
R22742:22747 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22731:22733 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22723:22728 LF.Induction <> double def
R22730:22730 LF.Tactics <> n:91 var
R22734:22739 LF.Induction <> double def
R22741:22741 LF.Tactics <> m:92 var
R22749:22751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22748:22748 LF.Tactics <> n:91 var
R22752:22752 LF.Tactics <> m:92 var
R23056:23062 LF.Tactics <> f_equal thm
R23056:23062 LF.Tactics <> f_equal thm
prf 24003:24024 <> double_injective_take2
binder 24035:24035 <> n:93
binder 24037:24037 <> m:94
R24061:24066 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24050:24052 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24042:24047 LF.Induction <> double def
R24049:24049 LF.Tactics <> n:93 var
R24053:24058 LF.Induction <> double def
R24060:24060 LF.Tactics <> m:94 var
R24068:24070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24067:24067 LF.Tactics <> n:93 var
R24071:24071 LF.Tactics <> m:94 var
R24557:24563 LF.Tactics <> f_equal thm
R24557:24563 LF.Tactics <> f_equal thm
prf 26689:26708 <> nth_error_after_last
R26723:26725 Coq.Init.Datatypes <> nat ind
binder 26719:26719 <> n:95
binder 26729:26729 <> X:96
R26744:26747 LF.Poly <> list ind
R26749:26749 LF.Tactics <> X:96 var
binder 26740:26740 <> l:97
R26767:26772 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26763:26765 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26755:26760 LF.Poly <> length def
R26762:26762 LF.Tactics <> l:97 var
R26766:26766 LF.Tactics <> n:95 var
R26786:26788 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26773:26781 LF.Poly <> nth_error def
R26785:26785 LF.Tactics <> n:95 var
R26783:26783 LF.Tactics <> l:97 var
R26789:26792 Coq.Init.Datatypes <> None constr
def 27395:27400 <> square
binder 27402:27402 <> n:98
R27408:27410 LF.Basics <> ::nat_scope:x_'*'_x not
R27407:27407 LF.Tactics <> n:98 var
R27411:27411 LF.Tactics <> n:98 var
prf 27482:27492 <> square_mult
binder 27503:27503 <> n:99
binder 27505:27505 <> m:100
R27522:27524 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27508:27513 LF.Tactics <> square def
R27517:27519 LF.Basics <> ::nat_scope:x_'*'_x not
R27516:27516 LF.Tactics <> n:99 var
R27520:27520 LF.Tactics <> m:100 var
R27533:27535 LF.Basics <> ::nat_scope:x_'*'_x not
R27525:27530 LF.Tactics <> square def
R27532:27532 LF.Tactics <> n:99 var
R27536:27541 LF.Tactics <> square def
R27543:27543 LF.Tactics <> m:100 var
R27858:27863 LF.Tactics <> square def
R28182:28191 LF.Induction <> mult_assoc prfax
R28182:28191 LF.Induction <> mult_assoc prfax
R28182:28191 LF.Induction <> mult_assoc prfax
R28217:28219 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28213:28215 LF.Basics <> ::nat_scope:x_'*'_x not
R28209:28211 LF.Basics <> ::nat_scope:x_'*'_x not
R28225:28227 LF.Basics <> ::nat_scope:x_'*'_x not
R28221:28223 LF.Basics <> ::nat_scope:x_'*'_x not
R28217:28219 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28213:28215 LF.Basics <> ::nat_scope:x_'*'_x not
R28209:28211 LF.Basics <> ::nat_scope:x_'*'_x not
R28225:28227 LF.Basics <> ::nat_scope:x_'*'_x not
R28221:28223 LF.Basics <> ::nat_scope:x_'*'_x not
R28246:28253 LF.Induction <> mul_comm prfax
R28246:28253 LF.Induction <> mul_comm prfax
R28246:28253 LF.Induction <> mul_comm prfax
R28262:28271 LF.Induction <> mult_assoc prfax
R28262:28271 LF.Induction <> mult_assoc prfax
R28297:28306 LF.Induction <> mult_assoc prfax
R28297:28306 LF.Induction <> mult_assoc prfax
R28297:28306 LF.Induction <> mult_assoc prfax
def 28692:28694 <> foo
R28700:28702 Coq.Init.Datatypes <> nat ind
binder 28697:28697 <> x:101
prf 28924:28935 <> silly_fact_1
binder 28946:28946 <> m:102
R28958:28960 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28954:28956 LF.Basics <> ::nat_scope:x_'+'_x not
R28949:28951 LF.Tactics <> foo def
R28953:28953 LF.Tactics <> m:102 var
R28972:28974 LF.Basics <> ::nat_scope:x_'+'_x not
R28961:28963 LF.Tactics <> foo def
R28967:28969 LF.Basics <> ::nat_scope:x_'+'_x not
R28966:28966 LF.Tactics <> m:102 var
def 29202:29204 <> bar
binder 29206:29206 <> x:103
R29219:29219 LF.Tactics <> x:103 var
R29230:29230 Coq.Init.Datatypes <> O constr
R29241:29241 Coq.Init.Datatypes <> S constr
prf 29315:29333 <> silly_fact_2_FAILED
binder 29344:29344 <> m:105
R29356:29358 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29352:29354 LF.Basics <> ::nat_scope:x_'+'_x not
R29347:29349 LF.Tactics <> bar def
R29351:29351 LF.Tactics <> m:105 var
R29370:29372 LF.Basics <> ::nat_scope:x_'+'_x not
R29359:29361 LF.Tactics <> bar def
R29365:29367 LF.Basics <> ::nat_scope:x_'+'_x not
R29364:29364 LF.Tactics <> m:105 var
prf 30359:30370 <> silly_fact_2
binder 30381:30381 <> m:106
R30393:30395 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30389:30391 LF.Basics <> ::nat_scope:x_'+'_x not
R30384:30386 LF.Tactics <> bar def
R30388:30388 LF.Tactics <> m:106 var
R30407:30409 LF.Basics <> ::nat_scope:x_'+'_x not
R30396:30398 LF.Tactics <> bar def
R30402:30404 LF.Basics <> ::nat_scope:x_'+'_x not
R30401:30401 LF.Tactics <> m:106 var
prf 30766:30778 <> silly_fact_2'
binder 30789:30789 <> m:107
R30801:30803 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30797:30799 LF.Basics <> ::nat_scope:x_'+'_x not
R30792:30794 LF.Tactics <> bar def
R30796:30796 LF.Tactics <> m:107 var
R30815:30817 LF.Basics <> ::nat_scope:x_'+'_x not
R30804:30806 LF.Tactics <> bar def
R30810:30812 LF.Basics <> ::nat_scope:x_'+'_x not
R30809:30809 LF.Tactics <> m:107 var
R30849:30851 LF.Tactics <> bar def
def 31497:31504 <> sillyfun
R31511:31513 Coq.Init.Datatypes <> nat ind
binder 31507:31507 <> n:108
R31518:31521 LF.Basics <> bool ind
R31532:31535 LF.Basics <> ::nat_scope:x_'=?'_x not
R31531:31531 LF.Tactics <> n:108 var
R31560:31563 LF.Basics <> ::nat_scope:x_'=?'_x not
R31559:31559 LF.Tactics <> n:108 var
R31584:31588 LF.Basics <> false constr
R31571:31575 LF.Basics <> false constr
R31543:31547 LF.Basics <> false constr
prf 31600:31613 <> sillyfun_false
R31629:31631 Coq.Init.Datatypes <> nat ind
binder 31625:31625 <> n:109
R31647:31649 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31637:31644 LF.Tactics <> sillyfun def
R31646:31646 LF.Tactics <> n:109 var
R31650:31654 LF.Basics <> false constr
R31683:31690 LF.Tactics <> sillyfun def
R31706:31709 LF.Basics <> ::nat_scope:x_'=?'_x not
R31706:31709 LF.Basics <> ::nat_scope:x_'=?'_x not
R31798:31801 LF.Basics <> ::nat_scope:x_'=?'_x not
R31798:31801 LF.Basics <> ::nat_scope:x_'=?'_x not
def 32674:32678 <> split
binder 32681:32681 <> X:110
binder 32683:32683 <> Y:111
R32698:32701 LF.Poly <> list ind
R32705:32705 LF.Poly <> ::type_scope:x_'*'_x not
R32704:32704 LF.Tactics <> X:110 var
R32706:32706 LF.Tactics <> Y:111 var
binder 32694:32694 <> l:112
R32727:32727 LF.Poly <> ::type_scope:x_'*'_x not
R32734:32738 LF.Poly <> ::type_scope:x_'*'_x not
R32745:32745 LF.Poly <> ::type_scope:x_'*'_x not
R32728:32731 LF.Poly <> list ind
R32733:32733 LF.Tactics <> X:110 var
R32739:32742 LF.Poly <> list ind
R32744:32744 LF.Tactics <> Y:111 var
R32758:32758 LF.Tactics <> l:112 var
R32769:32770 LF.Poly <> :::'['_']' not
R32775:32775 LF.Poly <> :::'('_x_','_x_')' not
R32778:32779 LF.Poly <> :::'('_x_','_x_')' not
R32782:32782 LF.Poly <> :::'('_x_','_x_')' not
R32776:32777 LF.Poly <> :::'['_']' not
R32780:32781 LF.Poly <> :::'['_']' not
R32794:32797 LF.Poly <> :::x_'::'_x not
R32788:32788 LF.Poly <> :::'('_x_','_x_')' not
R32790:32791 LF.Poly <> :::'('_x_','_x_')' not
R32793:32793 LF.Poly <> :::'('_x_','_x_')' not
R32815:32819 LF.Tactics <> split:113 def
R32836:32836 LF.Poly <> :::'('_x_','_x_')' not
R32839:32840 LF.Poly <> :::'('_x_','_x_')' not
R32843:32843 LF.Poly <> :::'('_x_','_x_')' not
R32848:32848 LF.Poly <> :::'('_x_','_x_')' not
R32856:32857 LF.Poly <> :::'('_x_','_x_')' not
R32865:32865 LF.Poly <> :::'('_x_','_x_')' not
R32850:32853 LF.Poly <> :::x_'::'_x not
R32859:32862 LF.Poly <> :::x_'::'_x not
prf 32975:32987 <> combine_split
binder 32998:32998 <> X:115
binder 33000:33000 <> Y:116
R33007:33010 LF.Poly <> list ind
R33014:33016 LF.Poly <> ::type_scope:x_'*'_x not
R33013:33013 LF.Tactics <> X:115 var
R33017:33017 LF.Tactics <> Y:116 var
binder 33003:33003 <> l:117
binder 33021:33022 <> l1:118
binder 33024:33025 <> l2:119
R33048:33053 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33037:33039 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33030:33034 LF.Tactics <> split def
R33036:33036 LF.Tactics <> l:117 var
R33040:33040 LF.Poly <> :::'('_x_','_x_')' not
R33043:33044 LF.Poly <> :::'('_x_','_x_')' not
R33047:33047 LF.Poly <> :::'('_x_','_x_')' not
R33041:33042 LF.Tactics <> l1:118 var
R33045:33046 LF.Tactics <> l2:119 var
R33067:33069 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33054:33060 LF.Poly <> combine def
R33065:33066 LF.Tactics <> l2:119 var
R33062:33063 LF.Tactics <> l1:118 var
R33070:33070 LF.Tactics <> l:117 var
def 33598:33606 <> sillyfun1
R33613:33615 Coq.Init.Datatypes <> nat ind
binder 33609:33609 <> n:120
R33620:33623 LF.Basics <> bool ind
R33634:33637 LF.Basics <> ::nat_scope:x_'=?'_x not
R33633:33633 LF.Tactics <> n:120 var
R33661:33664 LF.Basics <> ::nat_scope:x_'=?'_x not
R33660:33660 LF.Tactics <> n:120 var
R33684:33688 LF.Basics <> false constr
R33672:33675 LF.Basics <> true constr
R33645:33648 LF.Basics <> true constr
prf 33883:33902 <> sillyfun1_odd_FAILED
R33918:33920 Coq.Init.Datatypes <> nat ind
binder 33914:33914 <> n:121
R33944:33949 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33937:33939 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33926:33934 LF.Tactics <> sillyfun1 def
R33936:33936 LF.Tactics <> n:121 var
R33940:33943 LF.Basics <> true constr
R33955:33957 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33950:33952 LF.Basics <> odd def
R33954:33954 LF.Tactics <> n:121 var
R33958:33961 LF.Basics <> true constr
R33993:34001 LF.Tactics <> sillyfun1 def
R34023:34026 LF.Basics <> ::nat_scope:x_'=?'_x not
R34023:34026 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 34828:34840 <> sillyfun1_odd
R34856:34858 Coq.Init.Datatypes <> nat ind
binder 34852:34852 <> n:122
R34882:34887 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34875:34877 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34864:34872 LF.Tactics <> sillyfun1 def
R34874:34874 LF.Tactics <> n:122 var
R34878:34881 LF.Basics <> true constr
R34893:34895 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34888:34890 LF.Basics <> odd def
R34892:34892 LF.Tactics <> n:122 var
R34896:34899 LF.Basics <> true constr
R34931:34939 LF.Tactics <> sillyfun1 def
R34961:34964 LF.Basics <> ::nat_scope:x_'=?'_x not
R34961:34964 LF.Basics <> ::nat_scope:x_'=?'_x not
R35211:35218 LF.Tactics <> eqb_true thm
R35211:35218 LF.Tactics <> eqb_true thm
R35510:35513 LF.Basics <> ::nat_scope:x_'=?'_x not
R35510:35513 LF.Basics <> ::nat_scope:x_'=?'_x not
R35570:35577 LF.Tactics <> eqb_true thm
R35570:35577 LF.Tactics <> eqb_true thm
prf 35753:35774 <> bool_fn_applied_thrice
R35796:35799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35792:35795 LF.Basics <> bool ind
R35800:35803 LF.Basics <> bool ind
binder 35788:35788 <> f:123
R35811:35814 LF.Basics <> bool ind
binder 35807:35807 <> b:124
R35831:35833 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35820:35820 LF.Tactics <> f:123 var
R35823:35823 LF.Tactics <> f:123 var
R35826:35826 LF.Tactics <> f:123 var
R35828:35828 LF.Tactics <> b:124 var
R35834:35834 LF.Tactics <> f:123 var
R35836:35836 LF.Tactics <> b:124 var
prf 38486:38492 <> eqb_sym
R38510:38512 Coq.Init.Datatypes <> nat ind
binder 38504:38504 <> n:125
binder 38506:38506 <> m:126
R38518:38518 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38525:38529 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38536:38536 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38520:38523 LF.Basics <> ::nat_scope:x_'=?'_x not
R38519:38519 LF.Tactics <> n:125 var
R38524:38524 LF.Tactics <> m:126 var
R38531:38534 LF.Basics <> ::nat_scope:x_'=?'_x not
R38530:38530 LF.Tactics <> m:126 var
R38535:38535 LF.Tactics <> n:125 var
prf 38920:38928 <> eqb_trans
binder 38939:38939 <> n:127
binder 38941:38941 <> m:128
binder 38943:38943 <> p:129
R38961:38966 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38954:38956 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38949:38952 LF.Basics <> ::nat_scope:x_'=?'_x not
R38948:38948 LF.Tactics <> n:127 var
R38953:38953 LF.Tactics <> m:128 var
R38957:38960 LF.Basics <> true constr
R38980:38985 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38973:38975 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38968:38971 LF.Basics <> ::nat_scope:x_'=?'_x not
R38967:38967 LF.Tactics <> m:128 var
R38972:38972 LF.Tactics <> p:129 var
R38976:38979 LF.Basics <> true constr
R38992:38994 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38987:38990 LF.Basics <> ::nat_scope:x_'=?'_x not
R38986:38986 LF.Tactics <> n:127 var
R38991:38991 LF.Tactics <> p:129 var
R38995:38998 LF.Basics <> true constr
def 39574:39596 <> split_combine_statement
prf 39770:39782 <> split_combine
R39786:39808 LF.Tactics <> split_combine_statement prfax
def 39899:39928 <> manual_grade_for_split_combine
R39932:39937 Coq.Init.Datatypes <> option ind
R39943:39943 LF.Poly <> ::type_scope:x_'*'_x not
R39940:39942 Coq.Init.Datatypes <> nat ind
R39944:39949 Coq.Strings.String <> string ind
R39955:39958 Coq.Init.Datatypes <> None constr
prf 40038:40052 <> filter_exercise
binder 40064:40064 <> X:130
R40083:40086 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40082:40082 LF.Tactics <> X:130 var
R40087:40090 LF.Basics <> bool ind
binder 40075:40078 <> test:131
R40131:40131 LF.Tactics <> X:130 var
binder 40127:40127 <> x:132
R40142:40145 LF.Poly <> list ind
R40147:40147 LF.Tactics <> X:130 var
binder 40135:40135 <> l:133
binder 40137:40138 <> lf:134
R40176:40181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40166:40168 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40153:40158 LF.Poly <> filter def
R40165:40165 LF.Tactics <> l:133 var
R40160:40163 LF.Tactics <> test:131 var
R40170:40173 LF.Poly <> :::x_'::'_x not
R40169:40169 LF.Tactics <> x:132 var
R40174:40175 LF.Tactics <> lf:134 var
R40188:40190 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40182:40185 LF.Tactics <> test:131 var
R40187:40187 LF.Tactics <> x:132 var
R40191:40194 LF.Basics <> true constr
def 41133:41139 <> forallb
binder 41142:41142 <> X:135
R41161:41164 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41160:41160 LF.Tactics <> X:135 var
R41165:41168 LF.Basics <> bool ind
binder 41153:41156 <> test:136
R41176:41179 LF.Poly <> list ind
R41181:41181 LF.Tactics <> X:135 var
binder 41172:41172 <> l:137
R41186:41189 LF.Basics <> bool ind
def 41267:41280 <> test_forallb_1
R41307:41309 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41284:41290 LF.Tactics <> forallb prfax
R41296:41296 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41298:41298 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41300:41300 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41302:41302 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41304:41304 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41306:41306 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41292:41294 LF.Basics <> odd def
R41310:41313 LF.Basics <> true constr
def 41361:41374 <> test_forallb_2
R41404:41406 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41378:41384 LF.Tactics <> forallb prfax
R41391:41391 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41397:41397 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41403:41403 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41392:41396 LF.Basics <> false constr
R41398:41402 LF.Basics <> false constr
R41386:41389 LF.Basics <> negb def
R41407:41410 LF.Basics <> true constr
def 41458:41471 <> test_forallb_3
R41497:41499 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41475:41481 LF.Tactics <> forallb prfax
R41488:41488 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41490:41490 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41492:41492 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41494:41494 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41496:41496 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41483:41486 LF.Basics <> even def
R41500:41504 LF.Basics <> false constr
def 41552:41565 <> test_forallb_4
R41587:41589 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41569:41575 LF.Tactics <> forallb prfax
R41585:41586 LF.Poly <> :::'['_']' not
R41578:41580 LF.Basics <> eqb def
R41590:41593 LF.Basics <> true constr
def 41642:41648 <> existsb
binder 41651:41651 <> X:139
R41670:41673 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41669:41669 LF.Tactics <> X:139 var
R41674:41677 LF.Basics <> bool ind
binder 41662:41665 <> test:140
R41685:41688 LF.Poly <> list ind
R41690:41690 LF.Tactics <> X:139 var
binder 41681:41681 <> l:141
R41695:41698 LF.Basics <> bool ind
def 41776:41789 <> test_existsb_1
R41818:41820 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41793:41799 LF.Tactics <> existsb prfax
R41809:41809 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41811:41811 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41813:41813 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41815:41815 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41817:41817 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41802:41804 LF.Basics <> eqb def
R41821:41825 LF.Basics <> false constr
def 41873:41886 <> test_existsb_2
R41927:41929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41890:41896 LF.Tactics <> existsb prfax
R41910:41910 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41915:41915 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41920:41920 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41926:41926 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41911:41914 LF.Basics <> true constr
R41916:41919 LF.Basics <> true constr
R41921:41925 LF.Basics <> false constr
R41899:41902 LF.Basics <> andb def
R41904:41907 LF.Basics <> true constr
R41930:41933 LF.Basics <> true constr
def 41981:41994 <> test_existsb_3
R42023:42025 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41998:42004 LF.Tactics <> existsb prfax
R42010:42010 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42012:42012 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42014:42014 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42016:42016 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42018:42018 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42020:42020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42022:42022 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42006:42008 LF.Basics <> odd def
R42026:42029 LF.Basics <> true constr
def 42077:42090 <> test_existsb_4
R42109:42111 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42094:42100 LF.Tactics <> existsb prfax
R42107:42108 LF.Poly <> :::'['_']' not
R42102:42105 LF.Basics <> even def
R42112:42116 LF.Basics <> false constr
def 42167:42174 <> existsb'
binder 42177:42177 <> X:143
R42196:42199 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42195:42195 LF.Tactics <> X:143 var
R42200:42203 LF.Basics <> bool ind
binder 42188:42191 <> test:144
R42211:42214 LF.Poly <> list ind
R42216:42216 LF.Tactics <> X:143 var
binder 42207:42207 <> l:145
R42221:42224 LF.Basics <> bool ind
prf 42302:42317 <> existsb_existsb'
binder 42329:42329 <> X:146
R42348:42351 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42347:42347 LF.Tactics <> X:146 var
R42352:42355 LF.Basics <> bool ind
binder 42340:42343 <> test:147
R42363:42366 LF.Poly <> list ind
R42368:42368 LF.Tactics <> X:146 var
binder 42359:42359 <> l:148
R42388:42390 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42374:42380 LF.Tactics <> existsb prfax
R42387:42387 LF.Tactics <> l:148 var
R42382:42385 LF.Tactics <> test:147 var
R42391:42398 LF.Tactics <> existsb' prfax
R42405:42405 LF.Tactics <> l:148 var
R42400:42403 LF.Tactics <> test:147 var
